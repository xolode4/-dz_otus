---
# tasks file for roles/postgres_barman

---
# Установка необходимых пакетов для работы с postgres и пользователями
- name: install base tools
  apt:
    name:
      - python3-pexpect.noarch
      - python3-psycopg2
      - bash-completion 
      - wget 
    state: present
    update_cache: true

#  Установка пакетов barman и postgresql-client на сервер barman 
- name: install barman and postgresql packages on barman
  apt:
    name:
      - barman
      - barman-cli
      - postgresql
    state: present
    update_cache: true
  when: (ansible_hostname == "barman")

  #  Установка пакетов barman-cli на серверах node1 и node2 
- name: install barman-cli and postgresql packages on nodes
  apt:
    name:
      - barman-cli
    state: present
    update_cache: true
  when: (ansible_hostname != "barman")

#  Генерируем SSH-ключ для пользователя postgres на хосте node1
- name: generate SSH key for postgres
  user:
    name: postgres
    generate_ssh_key: yes
    ssh_key_type: rsa
    ssh_key_bits: 4096
    force: no
  when: (ansible_hostname == "node1")
 
#  Генерируем SSH-ключ для пользователя barman на хосте barman
- name: generate SSH key for barman
  user:
    name: barman
    uid: 994
    shell: /bin/bash
    generate_ssh_key: yes
    ssh_key_type: rsa
    ssh_key_bits: 4096
    force: no
  when: (ansible_hostname == "barman")

  #  Забираем содержимое открытого ключа postgres c хоста node1
- name: fetch all public ssh keys node1
  shell: cat /var/lib/postgresql/.ssh/id_rsa.pub
  register: ssh_keys
  when: (ansible_hostname == "node1")

  #  Копируем ключ с barman на node1
- name: transfer public key to barman
  delegate_to: barman
  authorized_key:
    key: "{{ ssh_keys.stdout }}"
    comment: "{{ansible_hostname}}"
    user: barman
  when: (ansible_hostname == "node1")

  #  Забираем содержимое открытого ключа barman c хоста barman 
- name: fetch all public ssh keys barman
  shell: cat /var/lib/barman/.ssh/id_rsa.pub
  register: ssh_keys
  when: (ansible_hostname == "barman")

 #  Копируем ключ с node1 на barman
- name: transfer public key to barman
  delegate_to: node1
  authorized_key:
    key: "{{ ssh_keys.stdout }}"
    comment: "{{ansible_hostname}}"
    user: postgres
  when: (ansible_hostname == "barman")

  #CREATE USER barman SUPERUSER;
- name: Create barman user
  become_user: postgres
  postgresql_user:
    name: barman
    password: '{{ barman_user_password }}'
    role_attr_flags: SUPERUSER 
  ignore_errors: true
  when: (ansible_hostname == "node1")

   # Добавляем разрешения для подключения с хоста barman
- name: Add permission for barman
  lineinfile:
    path: /var/lib/postgresql/14/main/pg_hba.conf
    line: 'host    all   {{ barman_user }}    {{ barman_ip }}/32    scram-sha-256'
  when: (ansible_hostname == "node1") or
        (ansible_hostname == "node2") 

  # Добавляем разрешения для подключения с хоста barman
- name: Add permission for barman
  lineinfile:
    path: /var/lib/postgresql/14/main/pg_hba.conf
    line: 'host    replication   {{ barman_user }}    {{ barman_ip }}/32    scram-sha-256'
  when: (ansible_hostname == "node1") or
        (ansible_hostname == "node2") 

  # Перезагружаем службу postgresql-server
- name: restart postgresql-server on node1
  service: 
    name: postgresql-14
    state: restarted
  when: (ansible_hostname == "node1")

  # Создаём БД otus;
- name: Create DB for backup
  become_user: postgres
  postgresql_db:
    name: otus
    encoding: UTF-8
    template: template0
    state: present
  when: (ansible_hostname == "node1")

  # Создаем таблицу test1 в БД otus;
- name: Add tables to otus_backup
  become_user: postgres
  postgresql_table:
    db: otus
    name: test1
    state: present
  when: (ansible_hostname == "node1")
  # Копируем файл .pgpass
- name: copy .pgpass
  template:
    src: .pgpass.j2
    dest: /var/lib/barman/.pgpass
    owner: barman
    group: barman
    mode: '0600'
  when: (ansible_hostname == "barman")

  # Копируем файл barman.conf
- name: copy barman.conf
  template:
    src: barman.conf.j2
    dest: /etc/barman.conf 
    owner: barman
    group: barman
    mode: '0755'
  when: (ansible_hostname == "barman")

 # Копируем файл node1.conf
- name: copy node1.conf
  template:
    src: node1.conf.j2
    dest: /etc/barman.d/node1.conf
    owner: barman
    group: barman
    mode: '0755'
  when: (ansible_hostname == "barman")

- name: barman switch-wal node1
  become_user: barman
  shell: barman switch-wal node1
  when: (ansible_hostname == "barman")

- name: barman cron
  become_user: barman
  shell: barman cron
  when: (ansible_hostname == "barman")
